name: Build-Test-Release

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: 20

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.version.outputs.new_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm ci

      - name: Run build & pack
        run: |
          npm run build
          zip -r build.zip dist

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build.zip

      - name: Determine Version
        id: version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
          PATCH=$((PATCH+1))
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "new_version=${NEW_VERSION}" >> $GITHUB_OUTPUT

  unit-test:
    runs-on: ubuntu-latest
    needs: build
    env:
      TEST_ENV: staging
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: ./artifacts

      - name: Run Unit Tests
        run: |
          echo "Running unit tests..."
          node tests/unit-test.js || (echo "Unit tests failed" && exit 1)

  integration-test:
    runs-on: ubuntu-latest
    needs: unit-test
    env:
      TEST_ENV: staging
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: ./artifacts

      - name: Run Integration Tests
        run: |
          echo "Running integration tests..."
          node tests/integration-test.js || (echo "Integration tests failed" && exit 1)

  release:
    runs-on: ubuntu-latest
    needs: integration-test
    environment: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: .

      - name: Create Dev Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: dev-v-${{ github.run_number }}
          release_name: dev-v-${{ github.run_number }}
          body: Automated dev release after successful unit & integration tests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build.zip
          asset_name: build.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
