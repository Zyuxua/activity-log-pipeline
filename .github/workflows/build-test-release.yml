name: Build-Test-Release

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: 20

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.version.outputs.new_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install deps
        run: npm ci || true

      - name: Run build & pack
        run: |
          npm run build
          zip -r build.zip dist

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build.zip

      - name: Determine Version
        id: version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
          PATCH=$((PATCH+1))
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "new_version=${NEW_VERSION}" >> $GITHUB_OUTPUT

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: ./artifacts || true

      - name: Run automated tests
        run: |
          echo "Running automated tests..."
          npm test || (echo "‚ùå Tests failed" && exit 1)

  release:
    runs-on: ubuntu-latest
    needs: test
    environment: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: .

      - name: Create Dev Release
        uses: actions/create-release@v1
        with:
          tag_name: dev-v${{ needs.build.outputs.new_version }}
          release_name: dev-v${{ needs.build.outputs.new_version }}
          body: Automated dev release after successful tests
          files: build.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
