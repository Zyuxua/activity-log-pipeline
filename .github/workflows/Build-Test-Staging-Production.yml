name: Build-Test-Staging-Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:


env:
  NODE_VERSION: 20
  TEST_ENV: staging

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.version.outputs.new_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm install

      - name: Build & Package
        run: |
          npm run build
          zip -r build.zip dist

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build.zip

      - name: Determine Version
        id: version
        run: |
          # 讀取 package.json 的版本並將 patch 自動遞增
          VERSION=$(node -p "require('./package.json').version")
          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
          PATCH=$((PATCH+1))
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "Current version: $VERSION"
          echo "new_version=${NEW_VERSION}" >> $GITHUB_OUTPUT

  unit-test:
    runs-on: ubuntu-latest
    needs: build
  
    env:
      TEST_ENV: ${{ env.TEST_ENV }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: ./artifacts

      - name: Run unit tests
        run: |
          echo "Running unit tests in $TEST_ENV..."
          node test/unit-test.js || (echo "❌ Unit tests failed" && exit 1)

  integration-test:
    runs-on: ubuntu-latest
    needs: unit-test
    env:
      TEST_ENV: ${{ env.TEST_ENV }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: ./artifacts

      - name: Run integration tests
        run: |
          echo "Running integration tests in $TEST_ENV..."
          node test/integration-test.js || (echo "❌ Integration tests failed" && exit 1)

  deploy-staging:
  
    runs-on: ubuntu-latest
    needs: [integration-test, build]
    environment: staging
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: .

      - name: Show version being deployed
        run: echo "Deploying version ${{ needs.build.outputs.new_version }} to Staging"

      - name: Deploy to Staging
        run: |
          echo "Deploying build.zip to Staging environment..."
         
          ls -l build.zip

  deploy-production:
   
    runs-on: ubuntu-latest
    needs: [integration-test, build]
    environment:
      name: production
      url: https://your-production-url.example.com
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: .

      - name: Show version being deployed
        run: echo "Deploying version ${{ needs.build.outputs.new_version }} to Production"

      - name: Deploy to Production
        run: |
          echo "Deploying build.zip to Production environment..."
         
          ls -l build.zip
